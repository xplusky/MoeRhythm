<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MoeRhythmWpf.MainWindow"
        Title="萌音节拍" Height="538" Width="407" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" MouseLeftButtonDown="Window_MouseLeftButtonDown" Loaded="Window_Loaded" KeyDown="Window_KeyDown" Closing="Window_Closing" Icon="Background.png">
	<Window.Resources>
		<Storyboard x:Key="StoryboardMikuDanceFade">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ImgMikuDance_Ghost">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ImgMikuDance_Ghost">
				<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ImgMikuDance_Ghost">
				<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ImgMikuDance_Ghost">
				<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="StoryboardDetectGameOver">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextDetect">
				<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextDetectGame">
				<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextDetectGame">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="GridDetectGameOverHelper">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:2.3" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridDetectGameOverHelper">
				<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BottonDetectGameOverOk">
				<DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BottonDetectGameOverOk">
				<SplineDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="0:0:2.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
	</Window.Triggers>
    <Grid>
    	<Grid x:Name="GridPlayer">
    		<Image x:Name="ImgMikuDance" Source="Res/Image/MikuDance/3.png" Stretch="Fill" Width="320" Height="450"/>
    		<Image x:Name="ImgMikuDance_Ghost" Source="Res/Image/MikuDance/3.png" Stretch="Fill" Width="320" Height="450" Visibility="Hidden" RenderTransformOrigin="0.5,0.5">
    			<Image.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform/>
    					<SkewTransform/>
    					<RotateTransform/>
    					<TranslateTransform/>
    				</TransformGroup>
    			</Image.RenderTransform>
    		</Image>
    		<MediaElement x:Name="BeatSound" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100" Source="Res/Sound/rhythm.wav" Volume="1" Visibility="Collapsed" LoadedBehavior="Manual"/>
    	</Grid>
    	<Grid x:Name="GridHelper" Width="320" Height="450" HorizontalAlignment="Center" VerticalAlignment="Center">
    		<Grid HorizontalAlignment="Center" Height="450" VerticalAlignment="Center" Width="320" Background="#01FFFFFF">
    			<i:Interaction.Triggers>
    				<i:EventTrigger EventName="MouseEnter" SourceName="GridHelper">
    					<ic:ChangePropertyAction TargetName="GridHelperInner" PropertyName="Visibility"/>
    				</i:EventTrigger>
    				<i:EventTrigger EventName="MouseLeave" SourceName="GridHelper">
    					<ic:ChangePropertyAction TargetName="GridHelperInner" PropertyName="Visibility">
    						<ic:ChangePropertyAction.Value>
    							<Visibility>Hidden</Visibility>
    						</ic:ChangePropertyAction.Value>
    					</ic:ChangePropertyAction>
    				</i:EventTrigger>
    			</i:Interaction.Triggers>
    		</Grid>
    		<Grid x:Name="GridHelperInner" HorizontalAlignment="Center" Height="450" VerticalAlignment="Center" Width="320" Background="#01FFFFFF">
    			<Button x:Name="ButtonSetting" Content="设置" HorizontalAlignment="Right" Height="41" Margin="0,0,8,121" VerticalAlignment="Bottom" Width="54.5" Click="ButtonSetting_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    			<Button x:Name="ButtonPlay" Content="跳舞" HorizontalAlignment="Right" Height="41" Margin="0,0,8,30" VerticalAlignment="Bottom" Width="54.5" Click="ButtonPlay_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    			<Button x:Name="ButtonDetect" Content="检测" HorizontalAlignment="Right" Height="41" Margin="0,0,8,76" VerticalAlignment="Bottom" Width="54.5" Click="ButtonDetect_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    			<Button x:Name="ButtonExit" Content="X" HorizontalAlignment="Right" Height="28" Margin="0,8,8,0" VerticalAlignment="Top" Width="28" Click="ButtonExit_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    			<Button x:Name="ButtonAbout" Content="?" HorizontalAlignment="Right" Height="28" Margin="0,8,40,0" VerticalAlignment="Top" Width="28" Template="{DynamicResource ButtonControlTemplateMetro}" Click="ButtonAbout_Click"/>
    			<Button x:Name="ButtonTopmost" HorizontalAlignment="Right" Height="28" Margin="0,8,72,0" VerticalAlignment="Top" Width="28" Template="{DynamicResource ButtonControlTemplateMetro}" Click="ButtonTopmost_Click">
    				<Image Source="Res/Image/push-pin.png" Stretch="Fill"/>
    			</Button>
    		</Grid>
    	</Grid>
    	<Grid x:Name="GridDetect" Width="320" Height="272" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,175,0,0" d:IsHidden="True">
    		<Border BorderBrush="Black" BorderThickness="1" Background="#CCFFFFFF">
    			<Border.Effect>
    				<DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
    			</Border.Effect>
    		</Border>
    		<Border BorderBrush="Black" BorderThickness="1" Background="#F2FFFFFF" Height="120" VerticalAlignment="Top" Width="229" Margin="0,22,0,0">
    			<Border.Effect>
    				<DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
    			</Border.Effect>
    		</Border>
    		<Grid x:Name="GridDetextBPM" Margin="20,160,20,20" MouseLeftButtonDown="GridDetextBPM_MouseLeftButtonDown">
    			<Border BorderBrush="Black" BorderThickness="1" Background="#F2FFFFFF">
    				<Border.Effect>
    					<DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
    				</Border.Effect>
    			</Border>
    			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="每一拍按一次" VerticalAlignment="Center" FontSize="24"/>
    		</Grid>
    		<Image x:Name="ImageDetectMiku2" Source="Res/Image/MikuDetect/2.png" Stretch="Fill" HorizontalAlignment="Right" Width="128" Height="128" VerticalAlignment="Top" Margin="0,12,0,0"/>
    		<Image x:Name="ImageDetectMiku" Source="Res/Image/MikuDetect/1.png" Stretch="Fill" HorizontalAlignment="Left" Width="128" RenderTransformOrigin="0.5,0.5" Height="128" VerticalAlignment="Top" Margin="0,12,0,0">
    			<Image.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform ScaleY="1" ScaleX="-1"/>
    					<SkewTransform AngleY="0" AngleX="0"/>
    					<RotateTransform Angle="0"/>
    					<TranslateTransform/>
    				</TransformGroup>
    			</Image.RenderTransform>
    		</Image>
    		<Button x:Name="ButtonGridDetectClose" Content="x" HorizontalAlignment="Right" VerticalAlignment="Top" Width="32" Margin="0,8,8,0" Height="32" Click="ButtonGridDetectClose_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    		<TextBlock x:Name="TextDetect" HorizontalAlignment="Center" TextWrapping="Wrap" Text="点击按钮可以开始检测每分钟节拍数BPM哦~结果保留到整数。如果按得太快会发生什么我什么都不知道的。●▽●" VerticalAlignment="Top" FontSize="16" Margin="0,30,0,0" Width="188.762" TextAlignment="Center"/>
    		<Grid x:Name="GridDetectGameOverHelper" Background="#80FFFFFF" Visibility="Hidden">
    			<Button x:Name="BottonDetectGameOverOk" Content="返回" HorizontalAlignment="Center" Width="175" VerticalAlignment="Bottom" Height="45" Margin="0,0,0,46" Click="BottonDetectGameOverOk_Click" Visibility="Hidden"/>
    		</Grid>
    		<TextBlock x:Name="TextDetectGame" HorizontalAlignment="Center" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" FontSize="16" Margin="0,30,0,0" Width="188.762" TextAlignment="Center" Visibility="Hidden"/>
    	</Grid>
    	<Grid x:Name="GridSetting" Width="320" Height="450" HorizontalAlignment="Center" VerticalAlignment="Center" d:IsHidden="True">
    		<Border BorderBrush="Black" BorderThickness="1" Background="#CCFFFFFF">
    			<Border.Effect>
    				<DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
    			</Border.Effect>
    		</Border>
    		<TextBlock x:Name="TextBPM" TextWrapping="Wrap" FontSize="42.667" Text="BPM" Height="60" VerticalAlignment="Top" Margin="12.755,8,8,0"/>
    		<Slider x:Name="SliderIntegerBPM" VerticalAlignment="Top" SmallChange="1" Minimum="30" Maximum="300" Value="108" Margin="10.505,72,17.625,0" d:LayoutOverrides="VerticalAlignment"/>
    		<Slider x:Name="SliderDecimalBPM" VerticalAlignment="Top" SmallChange="0.001" Maximum="0.999" Value="0" LargeChange="0.001" Margin="10.505,107,17.625,0" ValueChanged="SliderDecimalBPM_ValueChanged"/>
    		<CheckBox x:Name="CheckBoxEnergySaving" Content="关闭效果" FontSize="29.333" Margin="8,222.286,22.38,188" d:LayoutOverrides="Height"/>
    		<ComboBox x:Name="ComboboxBeatSpan" VerticalAlignment="Top" Margin="12.755,164,20.13,0" Height="37.837" SelectedIndex="0" FontSize="21.333" FontWeight="Bold">
    			<ComboBoxItem Content="连续"/>
    			<ComboBoxItem Content="2/4拍 强 弱"/>
    			<ComboBoxItem Content="3/4拍 强 弱 弱"/>
    			<ComboBoxItem Content="4/4拍 强 弱 弱 弱"/>
    		</ComboBox>
    		<Button x:Name="ButtonGridSettingClose" Content="x" HorizontalAlignment="Right" VerticalAlignment="Top" Width="32" Margin="0,8,8,0" Height="32" Click="ButtonGridSettingClose_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    	</Grid>
    	<Grid x:Name="GridAbout" Width="320" Height="450" HorizontalAlignment="Center" VerticalAlignment="Center" d:IsHidden="True">
    		<Border BorderBrush="Black" BorderThickness="1" Background="#CCFFFFFF">
    			<Border.Effect>
    				<DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
    			</Border.Effect>
    		</Border>
    		<Image Source="Res/Image/PluskyPresentsLogoMetro.png" Stretch="Fill" Width="241" Height="241" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-140,0,0"/>
    		<Button x:Name="ButtonWeb" Content="访问网站" VerticalAlignment="Center" Template="{DynamicResource ButtonControlTemplateMetro}" HorizontalAlignment="Center" Width="120" Height="40" Margin="0,313,0,0" Click="ButtonWeb_Click"/>
    		<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,173,0,0" TextAlignment="Center" FontSize="16"><Run Language="zh-cn" Text="萌音节拍（Windows版）"/><LineBreak/><Run Language="zh-cn" Text="版本 V1.0"/><LineBreak/><Run Language="zh-cn" Text="©2012 桂叶出品"/></TextBlock>
    		<Button x:Name="ButtonGridAboutClose" Content="x" HorizontalAlignment="Right" VerticalAlignment="Top" Width="32" Margin="0,8,8,0" Height="32" Click="ButtonGridAboutClose_Click" Template="{DynamicResource ButtonControlTemplateMetro}"/>
    	</Grid>
        
    </Grid>
</Window>
